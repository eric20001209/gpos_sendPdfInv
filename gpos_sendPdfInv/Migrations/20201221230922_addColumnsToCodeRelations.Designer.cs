// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gpos_sendPdfInv.Entities;

namespace gpos_sendPdfInv.Migrations
{
    [DbContext(typeof(admingposContext))]
    [Migration("20201221230922_addColumnsToCodeRelations")]
    partial class addColumnsToCodeRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("gpos_sendPdfInv.Entities.Barcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Barcode1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("barcode");

                    b.Property<bool>("Bcancelled")
                        .HasColumnType("bit")
                        .HasColumnName("bcancelled");

                    b.Property<double>("BoxQty")
                        .HasColumnType("float")
                        .HasColumnName("box_qty");

                    b.Property<string>("CancelledNote")
                        .HasMaxLength(502)
                        .HasColumnType("nvarchar(502)")
                        .HasColumnName("cancelled_note");

                    b.Property<string>("CartonBarcode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("carton_barcode");

                    b.Property<double>("CartonQty")
                        .HasColumnType("float")
                        .HasColumnName("carton_qty");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("invoice_number");

                    b.Property<int>("ItemCode")
                        .HasColumnType("int")
                        .HasColumnName("item_code");

                    b.Property<double>("ItemQty")
                        .HasColumnType("float")
                        .HasColumnName("item_qty");

                    b.Property<decimal>("PackagePrice")
                        .HasColumnType("money")
                        .HasColumnName("package_price");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier_code");

                    b.Property<decimal?>("VoucherAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("voucher_amount")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("VoucherCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("voucher_created")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("barcode");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<bool>("AcceptMassEmail")
                        .HasColumnType("bit")
                        .HasColumnName("accept_mass_email");

                    b.Property<int>("AccessLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("access_level")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("account_number");

                    b.Property<string>("Address1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address1");

                    b.Property<string>("Address1B")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("address1B");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address2");

                    b.Property<string>("Address2B")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("address2B");

                    b.Property<string>("Address3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address3");

                    b.Property<string>("ApDdi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ap_ddi");

                    b.Property<string>("ApEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ap_email");

                    b.Property<string>("ApMobile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ap_mobile");

                    b.Property<string>("ApName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ap_name");

                    b.Property<bool?>("Approved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("approved")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("area");

                    b.Property<decimal>("Balance")
                        .HasColumnType("money")
                        .HasColumnName("balance");

                    b.Property<string>("BankName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("bank_name");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("barcode");

                    b.Property<int?>("BranchCardId")
                        .HasColumnType("int")
                        .HasColumnName("branch_card_id");

                    b.Property<bool>("BuyOnline")
                        .HasColumnType("bit")
                        .HasColumnName("buy_online");

                    b.Property<string>("CatAccess")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cat_access")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("CatAccessGroup")
                        .HasColumnType("tinyint")
                        .HasColumnName("cat_access_group");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("CityB")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cityB");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<string>("CompanyB")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("companyB");

                    b.Property<string>("Contact")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CorpNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("corp_number");

                    b.Property<string>("CorpRep")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("corp_rep");

                    b.Property<string>("CorpRepMobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("corp_rep_mobile");

                    b.Property<string>("Country")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("country")
                        .HasDefaultValueSql("('New Zealand')");

                    b.Property<string>("CountryB")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("countryB")
                        .HasDefaultValueSql("('New Zealand')");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("money")
                        .HasColumnName("credit_limit");

                    b.Property<int>("CreditTerm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("credit_term")
                        .HasDefaultValueSql("((1))");

                    b.Property<byte>("CurrencyForPurchase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("currency_for_purchase")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("CustomerAccessLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_access_level")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CustomerNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer_number");

                    b.Property<string>("DdAccountNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dd_account_number");

                    b.Property<int>("DealerLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("dealer_level")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("DefaultLanguage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("default_language");

                    b.Property<byte?>("Directory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("directory")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("Discount")
                        .HasColumnType("float")
                        .HasColumnName("discount");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime")
                        .HasColumnName("dob");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fax");

                    b.Property<string>("Gm")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gm");

                    b.Property<string>("GmMobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gm_mobile");

                    b.Property<string>("GstNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("gst_number");

                    b.Property<double>("GstRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("gst_rate")
                        .HasDefaultValueSql("((0.15))");

                    b.Property<string>("IdentityId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("identity_id");

                    b.Property<string>("InitialTerm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("initial_term");

                    b.Property<bool>("IsBranch")
                        .HasColumnType("bit")
                        .HasColumnName("is_branch");

                    b.Property<int?>("LastBranchId")
                        .HasColumnType("int")
                        .HasColumnName("last_branch_id");

                    b.Property<DateTime>("LastPostTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("last_post_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("M1")
                        .HasColumnType("money")
                        .HasColumnName("m1");

                    b.Property<decimal>("M10")
                        .HasColumnType("money")
                        .HasColumnName("m10");

                    b.Property<decimal>("M11")
                        .HasColumnType("money")
                        .HasColumnName("m11");

                    b.Property<decimal>("M12")
                        .HasColumnType("money")
                        .HasColumnName("m12");

                    b.Property<decimal>("M2")
                        .HasColumnType("money")
                        .HasColumnName("m2");

                    b.Property<decimal>("M3")
                        .HasColumnType("money")
                        .HasColumnName("m3");

                    b.Property<decimal>("M4")
                        .HasColumnType("money")
                        .HasColumnName("m4");

                    b.Property<decimal>("M5")
                        .HasColumnType("money")
                        .HasColumnName("m5");

                    b.Property<decimal>("M6")
                        .HasColumnType("money")
                        .HasColumnName("m6");

                    b.Property<decimal>("M7")
                        .HasColumnType("money")
                        .HasColumnName("m7");

                    b.Property<decimal>("M8")
                        .HasColumnType("money")
                        .HasColumnName("m8");

                    b.Property<decimal>("M9")
                        .HasColumnType("money")
                        .HasColumnName("m9");

                    b.Property<int?>("MainCardId")
                        .HasColumnType("int")
                        .HasColumnName("main_card_id");

                    b.Property<string>("Midname")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("midname");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mobile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("NameB")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameB");

                    b.Property<bool>("NoSysQuote")
                        .HasColumnType("bit")
                        .HasColumnName("no_sys_quote");

                    b.Property<string>("Note")
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)")
                        .HasColumnName("note");

                    b.Property<byte>("OurBranch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("our_branch")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<int?>("PersonalId")
                        .HasColumnType("int")
                        .HasColumnName("personal_id");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phone");

                    b.Property<string>("PmDdi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pm_ddi");

                    b.Property<string>("PmEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pm_email");

                    b.Property<string>("PmMobile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pm_mobile");

                    b.Property<int>("Points")
                        .HasColumnType("int")
                        .HasColumnName("points");

                    b.Property<string>("Postal1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("postal1");

                    b.Property<string>("Postal2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("postal2");

                    b.Property<string>("Postal3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("postal3");

                    b.Property<decimal>("PurchaseAverage")
                        .HasColumnType("money")
                        .HasColumnName("purchase_average");

                    b.Property<decimal>("PurchaseNza")
                        .HasColumnType("money")
                        .HasColumnName("purchase_nza");

                    b.Property<string>("Qq")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qq");

                    b.Property<string>("RegCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reg_code");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("register_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Registered")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("registered")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ResetPwdCc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("reset_pwd_cc");

                    b.Property<string>("RootPath")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("root_path");

                    b.Property<int?>("Sales")
                        .HasColumnType("int")
                        .HasColumnName("sales");

                    b.Property<decimal>("ShippingFee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("shipping_fee")
                        .HasDefaultValueSql("((10))");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("short_name");

                    b.Property<string>("SitePass")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("site_pass");

                    b.Property<string>("SmDdi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sm_ddi");

                    b.Property<string>("SmEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sm_email");

                    b.Property<string>("SmMobile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sm_mobile");

                    b.Property<string>("SmName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sm_name");

                    b.Property<string>("State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("state");

                    b.Property<bool>("StopOrder")
                        .HasColumnType("bit")
                        .HasColumnName("stop_order");

                    b.Property<string>("StopOrderReason")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("stop_order_reason");

                    b.Property<int?>("Support")
                        .HasColumnType("int")
                        .HasColumnName("support");

                    b.Property<byte>("SupportLevel")
                        .HasColumnType("tinyint")
                        .HasColumnName("support_level");

                    b.Property<string>("Surname")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("surname");

                    b.Property<double?>("TargetPoint")
                        .HasColumnType("float")
                        .HasColumnName("target_point");

                    b.Property<double?>("TargetRental")
                        .HasColumnType("float")
                        .HasColumnName("target_rental");

                    b.Property<double?>("TargetSales")
                        .HasColumnType("float")
                        .HasColumnName("target_sales");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tax_number");

                    b.Property<string>("TechEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tech_email");

                    b.Property<string>("Tills")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tills")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("TotalOnlineOrderPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("total_online_order_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("TotalPosts")
                        .HasColumnType("int")
                        .HasColumnName("total_posts");

                    b.Property<string>("TradingName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trading_name");

                    b.Property<decimal>("TransTotal")
                        .HasColumnType("money")
                        .HasColumnName("trans_total");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Url")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("url");

                    b.Property<string>("Web")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("web");

                    b.Property<byte>("WorkingOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("working_on")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("zip");

                    b.HasKey("Id")
                        .IsClustered(false);

                    b.HasIndex(new[] { "DealerLevel" }, "IDX_card_dealer_level");

                    b.HasIndex(new[] { "Email" }, "IDX_card_email")
                        .IsUnique();

                    b.HasIndex(new[] { "Id" }, "IDX_card_id")
                        .IsUnique()
                        .IsClustered();

                    b.HasIndex(new[] { "Type" }, "IDX_card_type");

                    b.ToTable("card");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.CardAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("address");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("card_id");

                    b.Property<string>("City")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("city");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("country");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("is_default");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mobile");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("region");

                    b.Property<string>("Suburb")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("suburb");

                    b.Property<string>("Zip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("zip");

                    b.HasKey("Id");

                    b.ToTable("card_address");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("barcode");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("card_id");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("DiscountPercent")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("discount_percent");

                    b.Property<string>("Kid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("kid");

                    b.Property<string>("Kit")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("kit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<string>("Pack")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pack");

                    b.Property<string>("Points")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("points");

                    b.Property<string>("Quantity")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quantity");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SSerialNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("s_serialNo");

                    b.Property<string>("SalesPrice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("salesPrice");

                    b.Property<string>("Site")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("site");

                    b.Property<string>("Supplier")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier_code");

                    b.Property<string>("SupplierPrice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplierPrice");

                    b.Property<string>("System")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("system")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Used")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("used")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.CodeBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("branch_id")
                        .HasDefaultValueSql("((1))");

                    b.Property<double?>("BranchLowStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("branch_low_stock")
                        .HasDefaultValueSql("((-1))");

                    b.Property<double>("BranchLowStockAdv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("branch_low_stock_adv")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit")
                        .HasColumnName("inactive");

                    b.Property<DateTime?>("LsaEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lsa_end_date");

                    b.Property<DateTime?>("LsaStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lsa_start_date");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("money")
                        .HasColumnName("price1");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("money")
                        .HasColumnName("price2");

                    b.Property<int>("QposQtyBreak")
                        .HasColumnType("int")
                        .HasColumnName("qpos_qty_break");

                    b.Property<double?>("ShelfQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("shelf_qty")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("ShelfQtyAdv")
                        .HasColumnType("float")
                        .HasColumnName("shelf_qty_adv");

                    b.Property<bool>("Special")
                        .HasColumnType("bit")
                        .HasColumnName("special");

                    b.Property<decimal?>("SpecialPrice")
                        .HasColumnType("money")
                        .HasColumnName("special_price");

                    b.Property<DateTime?>("SpecialPriceEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("special_price_end_date");

                    b.Property<DateTime?>("SpecialPriceStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("special_price_start_date");

                    b.Property<DateTime?>("SqaEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("sqa_end_date");

                    b.Property<DateTime?>("SqaStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("sqa_start_date");

                    b.Property<string>("StockLocation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("stock_location");

                    b.HasKey("Id");

                    b.ToTable("code_branch");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.CodeRelations", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<int>("AllocatedStock")
                        .HasColumnType("int")
                        .HasColumnName("allocated_stock");

                    b.Property<decimal>("AverageCost")
                        .HasColumnType("money")
                        .HasColumnName("average_cost");

                    b.Property<bool>("AvoidPoint")
                        .HasColumnType("bit")
                        .HasColumnName("avoid_point");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("barcode");

                    b.Property<string>("BestBefore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("best_before");

                    b.Property<int?>("BomId")
                        .HasColumnType("int")
                        .HasColumnName("bom_id");

                    b.Property<string>("BoxedQty")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxed_qty");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("brand");

                    b.Property<string>("Cat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cat");

                    b.Property<bool>("Clearance")
                        .HasColumnType("bit")
                        .HasColumnName("clearance");

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<byte?>("ComingSoon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("coming_soon")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("CommissionRate")
                        .HasColumnType("float")
                        .HasColumnName("commission_rate");

                    b.Property<bool>("CoreRange")
                        .HasColumnType("bit")
                        .HasColumnName("core_range");

                    b.Property<int?>("CostAccount")
                        .HasColumnType("int")
                        .HasColumnName("cost_account");

                    b.Property<int>("CostofsalesAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("costofsales_account")
                        .HasDefaultValueSql("((5111))");

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country_of_origin");

                    b.Property<byte>("Currency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("currency")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("DateRange")
                        .HasColumnType("bit")
                        .HasColumnName("date_range");

                    b.Property<int>("Disappeared")
                        .HasColumnType("int")
                        .HasColumnName("disappeared");

                    b.Property<bool>("DoNotRounddown")
                        .HasColumnType("bit")
                        .HasColumnName("do_not_rounddown");

                    b.Property<double?>("ExchangeRate")
                        .HasColumnType("float")
                        .HasColumnName("exchange_rate");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expire_date");

                    b.Property<decimal?>("ForeignSupplierPrice")
                        .HasColumnType("money")
                        .HasColumnName("foreign_supplier_price");

                    b.Property<bool>("FreeDelivery")
                        .HasColumnType("bit");

                    b.Property<bool>("HasScale")
                        .HasColumnType("bit")
                        .HasColumnName("has_scale");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit")
                        .HasColumnName("hidden");

                    b.Property<bool?>("Hot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("hot")
                        .HasDefaultValueSql("((1))");

                    b.Property<byte?>("Inactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("inactive")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("IncomeAccount")
                        .HasColumnType("int")
                        .HasColumnName("income_account");

                    b.Property<int>("InnerPack")
                        .HasColumnType("int")
                        .HasColumnName("inner_pack");

                    b.Property<int?>("InventoryAccount")
                        .HasColumnType("int")
                        .HasColumnName("inventory_account");

                    b.Property<bool>("IsBarcodeprice")
                        .HasColumnType("bit")
                        .HasColumnName("is_barcodeprice");

                    b.Property<bool>("IsIdCheck")
                        .HasColumnType("bit")
                        .HasColumnName("is_id_check");

                    b.Property<bool>("IsMemberOnly")
                        .HasColumnType("bit")
                        .HasColumnName("is_member_only");

                    b.Property<bool>("IsService")
                        .HasColumnType("bit")
                        .HasColumnName("is_service");

                    b.Property<bool>("IsSpecial")
                        .HasColumnType("bit")
                        .HasColumnName("is_special");

                    b.Property<bool>("IsVoidDiscount")
                        .HasColumnType("bit")
                        .HasColumnName("is_void_discount");

                    b.Property<bool>("IsWebsiteItem")
                        .HasColumnType("bit")
                        .HasColumnName("is_website_item");

                    b.Property<decimal>("LevelPrice0")
                        .HasColumnType("money")
                        .HasColumnName("level_price0");

                    b.Property<decimal>("LevelPrice1")
                        .HasColumnType("money")
                        .HasColumnName("level_price1");

                    b.Property<decimal>("LevelPrice2")
                        .HasColumnType("money")
                        .HasColumnName("level_price2");

                    b.Property<decimal>("LevelPrice3")
                        .HasColumnType("money")
                        .HasColumnName("level_price3");

                    b.Property<decimal>("LevelPrice4")
                        .HasColumnType("money")
                        .HasColumnName("level_price4");

                    b.Property<decimal>("LevelPrice5")
                        .HasColumnType("money")
                        .HasColumnName("level_price5");

                    b.Property<decimal>("LevelPrice6")
                        .HasColumnType("money")
                        .HasColumnName("level_price6");

                    b.Property<decimal>("LevelPrice7")
                        .HasColumnType("money")
                        .HasColumnName("level_price7");

                    b.Property<decimal>("LevelPrice8")
                        .HasColumnType("money")
                        .HasColumnName("level_price8");

                    b.Property<decimal>("LevelPrice9")
                        .HasColumnType("money")
                        .HasColumnName("level_price9");

                    b.Property<double>("LevelRate1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("level_rate1")
                        .HasDefaultValueSql("((100))");

                    b.Property<double>("LevelRate2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("level_rate2")
                        .HasDefaultValueSql("((95))");

                    b.Property<double>("LevelRate3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("level_rate3")
                        .HasDefaultValueSql("((90))");

                    b.Property<double>("LevelRate4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("level_rate4")
                        .HasDefaultValueSql("((85))");

                    b.Property<double>("LevelRate5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("level_rate5")
                        .HasDefaultValueSql("((80))");

                    b.Property<double>("LevelRate6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("level_rate6")
                        .HasDefaultValueSql("((78))");

                    b.Property<double?>("LevelRate7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("level_rate7")
                        .HasDefaultValueSql("((75))");

                    b.Property<double?>("LevelRate8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("level_rate8")
                        .HasDefaultValueSql("((73))");

                    b.Property<double?>("LevelRate9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("level_rate9")
                        .HasDefaultValueSql("((70))");

                    b.Property<int>("Line1Font")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("line1_font")
                        .HasDefaultValueSql("((9))");

                    b.Property<int>("Line2Font")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("line2_font")
                        .HasDefaultValueSql("((9))");

                    b.Property<int>("LowStock")
                        .HasColumnType("int")
                        .HasColumnName("low_stock");

                    b.Property<decimal>("ManualCostFrd")
                        .HasColumnType("money")
                        .HasColumnName("manual_cost_frd");

                    b.Property<decimal>("ManualCostNzd")
                        .HasColumnType("money")
                        .HasColumnName("manual_cost_nzd");

                    b.Property<double>("ManualExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("manual_exchange_rate")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Moq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("moq")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("NameCn")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("name_cn");

                    b.Property<bool>("NewItem")
                        .HasColumnType("bit")
                        .HasColumnName("new_item");

                    b.Property<DateTime?>("NewItemDate")
                        .HasColumnType("datetime")
                        .HasColumnName("new_item_date");

                    b.Property<bool>("NoDiscount")
                        .HasColumnType("bit")
                        .HasColumnName("no_discount");

                    b.Property<double?>("NormalPrice")
                        .HasColumnType("float")
                        .HasColumnName("normal_price");

                    b.Property<decimal>("NzdFreight")
                        .HasColumnType("money")
                        .HasColumnName("nzd_freight");

                    b.Property<bool>("OnLineRetail")
                        .HasColumnType("bit");

                    b.Property<string>("OuterPackBarcode")
                        .HasMaxLength(99)
                        .IsUnicode(false)
                        .HasColumnType("varchar(99)")
                        .HasColumnName("outer_pack_barcode");

                    b.Property<string>("PackageBarcode1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("package_barcode1");

                    b.Property<string>("PackageBarcode2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("package_barcode2");

                    b.Property<string>("PackageBarcode3")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("package_barcode3");

                    b.Property<double?>("PackagePrice1")
                        .HasColumnType("float")
                        .HasColumnName("package_price1");

                    b.Property<double?>("PackagePrice2")
                        .HasColumnType("float")
                        .HasColumnName("package_price2");

                    b.Property<double?>("PackagePrice3")
                        .HasColumnType("float")
                        .HasColumnName("package_price3");

                    b.Property<int?>("PackageQty1")
                        .HasColumnType("int")
                        .HasColumnName("package_qty1");

                    b.Property<int?>("PackageQty2")
                        .HasColumnType("int")
                        .HasColumnName("package_qty2");

                    b.Property<int?>("PackageQty3")
                        .HasColumnType("int")
                        .HasColumnName("package_qty3");

                    b.Property<bool>("PickDate")
                        .HasColumnType("bit")
                        .HasColumnName("pick_date");

                    b.Property<bool?>("Popular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("popular")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("Price1")
                        .HasColumnType("money")
                        .HasColumnName("price1");

                    b.Property<decimal>("Price2")
                        .HasColumnType("money")
                        .HasColumnName("price2");

                    b.Property<decimal>("Price3")
                        .HasColumnType("money")
                        .HasColumnName("price3");

                    b.Property<decimal>("Price4")
                        .HasColumnType("money")
                        .HasColumnName("price4");

                    b.Property<decimal>("Price5")
                        .HasColumnType("money")
                        .HasColumnName("price5");

                    b.Property<decimal>("Price6")
                        .HasColumnType("money")
                        .HasColumnName("price6");

                    b.Property<decimal>("Price7")
                        .HasColumnType("money")
                        .HasColumnName("price7");

                    b.Property<decimal>("Price8")
                        .HasColumnType("money")
                        .HasColumnName("price8");

                    b.Property<decimal>("Price9")
                        .HasColumnType("money")
                        .HasColumnName("price9");

                    b.Property<decimal>("PriceSystem")
                        .HasColumnType("money")
                        .HasColumnName("price_system");

                    b.Property<int?>("PrintFormatCode")
                        .HasColumnType("int")
                        .HasColumnName("print_format_code");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_code");

                    b.Property<int?>("PromoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("promo_id")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Promotion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("promotion")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("QposQtyBreak")
                        .HasColumnType("int")
                        .HasColumnName("qpos_qty_break");

                    b.Property<int>("QtyBreak1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("qty_break1")
                        .HasDefaultValueSql("((5))");

                    b.Property<int?>("QtyBreak2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("qty_break2")
                        .HasDefaultValueSql("((10))");

                    b.Property<int?>("QtyBreak3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("qty_break3")
                        .HasDefaultValueSql("((20))");

                    b.Property<int?>("QtyBreak4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("qty_break4")
                        .HasDefaultValueSql("((50))");

                    b.Property<int?>("QtyBreak5")
                        .HasColumnType("int")
                        .HasColumnName("qty_break5");

                    b.Property<int?>("QtyBreak6")
                        .HasColumnType("int")
                        .HasColumnName("qty_break6");

                    b.Property<int?>("QtyBreak7")
                        .HasColumnType("int")
                        .HasColumnName("qty_break7");

                    b.Property<int?>("QtyBreak8")
                        .HasColumnType("int")
                        .HasColumnName("qty_break8");

                    b.Property<int?>("QtyBreak9")
                        .HasColumnType("int")
                        .HasColumnName("qty_break9");

                    b.Property<double>("QtyBreakDiscount1")
                        .HasColumnType("float")
                        .HasColumnName("qty_break_discount1");

                    b.Property<double?>("QtyBreakDiscount2")
                        .HasColumnType("float")
                        .HasColumnName("qty_break_discount2");

                    b.Property<double?>("QtyBreakDiscount3")
                        .HasColumnType("float")
                        .HasColumnName("qty_break_discount3");

                    b.Property<double?>("QtyBreakDiscount4")
                        .HasColumnType("float")
                        .HasColumnName("qty_break_discount4");

                    b.Property<double?>("QtyBreakDiscount5")
                        .HasColumnType("float")
                        .HasColumnName("qty_break_discount5");

                    b.Property<double?>("QtyBreakDiscount6")
                        .HasColumnType("float")
                        .HasColumnName("qty_break_discount6");

                    b.Property<double?>("QtyBreakDiscount7")
                        .HasColumnType("float")
                        .HasColumnName("qty_break_discount7");

                    b.Property<double?>("QtyBreakDiscount8")
                        .HasColumnType("float")
                        .HasColumnName("qty_break_discount8");

                    b.Property<double?>("QtyBreakDiscount9")
                        .HasColumnType("float")
                        .HasColumnName("qty_break_discount9");

                    b.Property<decimal?>("QtyBreakPrice1")
                        .HasColumnType("money")
                        .HasColumnName("qty_break_price1");

                    b.Property<decimal?>("QtyBreakPrice10")
                        .HasColumnType("money")
                        .HasColumnName("qty_break_price10");

                    b.Property<decimal?>("QtyBreakPrice2")
                        .HasColumnType("money")
                        .HasColumnName("qty_break_price2");

                    b.Property<decimal?>("QtyBreakPrice3")
                        .HasColumnType("money")
                        .HasColumnName("qty_break_price3");

                    b.Property<decimal?>("QtyBreakPrice4")
                        .HasColumnType("money")
                        .HasColumnName("qty_break_price4");

                    b.Property<decimal?>("QtyBreakPrice5")
                        .HasColumnType("money")
                        .HasColumnName("qty_break_price5");

                    b.Property<decimal?>("QtyBreakPrice6")
                        .HasColumnType("money")
                        .HasColumnName("qty_break_price6");

                    b.Property<decimal?>("QtyBreakPrice7")
                        .HasColumnType("money")
                        .HasColumnName("qty_break_price7");

                    b.Property<decimal?>("QtyBreakPrice8")
                        .HasColumnType("money")
                        .HasColumnName("qty_break_price8");

                    b.Property<decimal?>("QtyBreakPrice9")
                        .HasColumnType("money")
                        .HasColumnName("qty_break_price9");

                    b.Property<double>("Rate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("rate")
                        .HasDefaultValueSql("((1.1))");

                    b.Property<bool>("RealStock")
                        .HasColumnType("bit")
                        .HasColumnName("real_stock");

                    b.Property<int>("RedeemPoint")
                        .HasColumnType("int")
                        .HasColumnName("redeem_point");

                    b.Property<string>("RefCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ref_code");

                    b.Property<decimal>("Rrp")
                        .HasColumnType("money")
                        .HasColumnName("rrp");

                    b.Property<string>("SCat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("s_cat");

                    b.Property<string>("ScaleDescriptionLine1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("scale_description_line1");

                    b.Property<string>("ScaleDescriptionLine2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("scale_description_line2");

                    b.Property<string>("SellBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sell_by");

                    b.Property<bool>("Skip")
                        .HasColumnType("bit")
                        .HasColumnName("skip");

                    b.Property<string>("SkuCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sku_code");

                    b.Property<decimal?>("SpecialCost")
                        .HasColumnType("money")
                        .HasColumnName("special_cost");

                    b.Property<DateTime?>("SpecialCostEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("special_cost_end_date");

                    b.Property<DateTime?>("SpecialCostStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("special_cost_start_date");

                    b.Property<decimal?>("SpecialPrice")
                        .HasColumnType("money")
                        .HasColumnName("special_price");

                    b.Property<DateTime?>("SpecialPriceEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("special_price_end_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("SpecialPriceStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("special_price_start_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SsCat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ss_cat");

                    b.Property<string>("StockLocation")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("stock_location");

                    b.Property<string>("Supplier")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier_code");

                    b.Property<decimal?>("SupplierPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("supplier_price")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Tareweight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tareweight")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_code");

                    b.Property<double>("TaxRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("tax_rate")
                        .HasDefaultValueSql("((0.15))");

                    b.Property<int>("Unit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("unit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UsedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("used_by");

                    b.Property<double?>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("weight")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("outer_pack")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cat")
                        .HasDatabaseName("IDX_code_relations_cat");

                    b.HasIndex("Clearance")
                        .HasDatabaseName("IDX_code_relations_clearance");

                    b.HasIndex("Code")
                        .HasDatabaseName("IDX_code_relations_code");

                    b.HasIndex("Id")
                        .HasDatabaseName("IDX_code_relations_id");

                    b.HasIndex("SCat")
                        .HasDatabaseName("IDX_code_relations_scat");

                    b.HasIndex("SsCat")
                        .HasDatabaseName("IDX_code_relations_sscat");

                    b.HasIndex("SupplierCode")
                        .HasDatabaseName("IDX_code_relations_spl_code");

                    b.ToTable("code_relations");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.DpsOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("AmountSettlement")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("amount_settlement");

                    b.Property<string>("AuthCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("auth_code");

                    b.Property<string>("BillingId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("billing_id");

                    b.Property<string>("CardHolderName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_holder_name");

                    b.Property<string>("CardName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_name");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_number2");

                    b.Property<string>("ClientInfo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("client_info");

                    b.Property<string>("CurrencyInput")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("currency_input");

                    b.Property<string>("CurrencySettlement")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("currency_settlement");

                    b.Property<string>("Cvc2ResultCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cvc2_result_code");

                    b.Property<string>("DateExpiry")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_expiry");

                    b.Property<string>("DpsBillingId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dps_billing_id");

                    b.Property<string>("DpsTxnRef")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dps_txn_ref");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_address");

                    b.Property<string>("MerchantReference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("merchant_reference");

                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id")
                        .HasDefaultValueSql("(0)");

                    b.Property<bool>("OrderSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("order_sent")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payment_method");

                    b.Property<string>("ResponseText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("response_text");

                    b.Property<string>("Success")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("success");

                    b.Property<string>("TxnData1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txn_data1");

                    b.Property<string>("TxnData2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txn_data2");

                    b.Property<string>("TxnData3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txn_data3");

                    b.Property<string>("TxnId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txn_id");

                    b.Property<string>("TxnMac")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txn_mac");

                    b.Property<string>("TxnType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("txn_type");

                    b.Property<string>("Valid")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("valid");

                    b.HasKey("Id");

                    b.ToTable("DpsOutput");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.EcomBanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("HrefUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("href_url");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("PicUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pic_url");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.HasKey("Id");

                    b.ToTable("ecom_banner");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.EcomSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("active")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("ecom_setting");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.EcomTopMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("active")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.ToTable("ecom_top_menu");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.Enum", b =>
                {
                    b.Property<string>("Class")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("class");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Class", "Id");

                    b.HasIndex(new[] { "Class" }, "IDX_enum_class");

                    b.HasIndex(new[] { "Id" }, "IDX_enum_class_id");

                    b.HasIndex(new[] { "Name" }, "IDX_enum_name");

                    b.ToTable("enum");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.FreightSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<decimal>("FreeshippingActiveAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("freeshipping_active_amount")
                        .HasDefaultValueSql("(0)");

                    b.Property<decimal>("Freight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("freight")
                        .HasDefaultValueSql("(0)");

                    b.Property<decimal>("FreightRangeEnd1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("freight_range_end1")
                        .HasDefaultValueSql("(0)");

                    b.Property<decimal>("FreightRangeEnd2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("freight_range_end2")
                        .HasDefaultValueSql("(0)");

                    b.Property<decimal>("FreightRangeEnd3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("freight_range_end3")
                        .HasDefaultValueSql("(0)");

                    b.Property<decimal>("FreightRangeStart1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("freight_range_start1")
                        .HasDefaultValueSql("(0)");

                    b.Property<decimal>("FreightRangeStart2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("freight_range_start2")
                        .HasDefaultValueSql("(0)");

                    b.Property<decimal>("FreightRangeStart3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("freight_range_start3")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("Region")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("region");

                    b.HasKey("Id");

                    b.ToTable("freight_settings");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Address1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address1");

                    b.Property<string>("Address2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address2");

                    b.Property<string>("Address3")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address3");

                    b.Property<int>("Agent")
                        .HasColumnType("int")
                        .HasColumnName("agent");

                    b.Property<decimal?>("AmountPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("amount_paid")
                        .HasDefaultValueSql("(0)");

                    b.Property<int?>("Branch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("branch")
                        .HasDefaultValueSql("(1)");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("card_id");

                    b.Property<DateTime>("CommitDate")
                        .HasColumnType("datetime")
                        .HasColumnName("commit_date");

                    b.Property<string>("Company")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("company");

                    b.Property<string>("CustPonumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_ponumber");

                    b.Property<double>("CustomerGst")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("customer_gst")
                        .HasDefaultValueSql("((0.15))");

                    b.Property<string>("DebugInfo")
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)")
                        .HasColumnName("debug_info");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fax");

                    b.Property<decimal?>("Freight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("freight")
                        .HasDefaultValueSql("(0)");

                    b.Property<bool>("GstInclusive")
                        .HasColumnType("bit")
                        .HasColumnName("gst_inclusive");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int")
                        .HasColumnName("invoice_number");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<bool>("NoIndividualPrice")
                        .HasColumnType("bit")
                        .HasColumnName("no_individual_price");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit")
                        .HasColumnName("paid");

                    b.Property<byte?>("PaymentType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("payment_type")
                        .HasDefaultValueSql("(2)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phone");

                    b.Property<string>("PickUpTime")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pick_up_time");

                    b.Property<string>("Postal1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("postal1");

                    b.Property<string>("Postal2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("postal2");

                    b.Property<string>("Postal3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("postal3");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<DateTime>("RecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("record_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("Refunded")
                        .HasColumnType("bit")
                        .HasColumnName("refunded");

                    b.Property<string>("Sales")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sales");

                    b.Property<string>("SalesNote")
                        .HasColumnType("text")
                        .HasColumnName("sales_note");

                    b.Property<byte>("SalesType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("sales_type")
                        .HasDefaultValueSql("(1)");

                    b.Property<byte>("ShippingMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("shipping_method")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("Shipto")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("shipto");

                    b.Property<bool>("SpecialShipto")
                        .HasColumnType("bit")
                        .HasColumnName("special_shipto");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("(1)");

                    b.Property<bool>("System")
                        .HasColumnType("bit")
                        .HasColumnName("system");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("money")
                        .HasColumnName("tax");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("TradingName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("trading_name");

                    b.Property<string>("TransFailedReason")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("trans_failed_reason");

                    b.Property<byte?>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("type")
                        .HasDefaultValueSql("(3)");

                    b.HasKey("Id");

                    b.ToTable("invoice");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.InvoiceFreight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int")
                        .HasColumnName("invoice_number");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<string>("ShipDesc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ship_desc");

                    b.Property<int?>("ShipId")
                        .HasColumnType("int")
                        .HasColumnName("ship_id");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ship_name");

                    b.Property<string>("Ticket")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ticket");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.HasIndex(new[] { "InvoiceNumber" }, "IDX_invoice_freight_invoice_number");

                    b.HasIndex(new[] { "Ticket" }, "IDX_invoice_freight_ticket");

                    b.ToTable("invoice_freight");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.InvoiceNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int")
                        .HasColumnName("invoice_number");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<DateTime>("RecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("record_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("staff_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InvoiceNumber" }, "IDX_invoice_note_invoice_number");

                    b.ToTable("invoice_note");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.MessageBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("subjuect");

                    b.HasKey("Id");

                    b.ToTable("message_board");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.OrderItem", b =>
                {
                    b.Property<int>("Kid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("kid")
                        .UseIdentityColumn();

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("barcode");

                    b.Property<string>("Cat")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("cat");

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal>("CommitPrice")
                        .HasColumnType("money")
                        .HasColumnName("commit_price");

                    b.Property<double>("DiscountPercent")
                        .HasColumnType("float")
                        .HasColumnName("discount_percent");

                    b.Property<string>("Eta")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("eta");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ItemName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("item_name");

                    b.Property<string>("ItemNameCn")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item_name_cn");

                    b.Property<bool>("Kit")
                        .HasColumnType("bit")
                        .HasColumnName("kit");

                    b.Property<int?>("Krid")
                        .HasColumnType("int")
                        .HasColumnName("krid");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("money")
                        .HasColumnName("order_total");

                    b.Property<string>("Pack")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("pack");

                    b.Property<int>("Part")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("part")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int?>("PromoId")
                        .HasColumnType("int")
                        .HasColumnName("promo_id");

                    b.Property<string>("PromoName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("promo_name");

                    b.Property<double>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<double>("QuantitySupplied")
                        .HasColumnType("float")
                        .HasColumnName("quantity_supplied");

                    b.Property<string>("SCat")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("s_cat");

                    b.Property<string>("SsCat")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ss_cat");

                    b.Property<int?>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("station_id");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier");

                    b.Property<string>("SupplierCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier_code");

                    b.Property<decimal>("SupplierPrice")
                        .HasColumnType("money")
                        .HasColumnName("supplier_price");

                    b.Property<bool>("SysSpecial")
                        .HasColumnType("bit")
                        .HasColumnName("sys_special");

                    b.Property<bool>("System")
                        .HasColumnType("bit")
                        .HasColumnName("system");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_code");

                    b.Property<double?>("TaxRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("tax_rate")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Kid");

                    b.HasIndex("Code")
                        .HasDatabaseName("IDX_order_item_code");

                    b.HasIndex("Id")
                        .HasDatabaseName("IDX_order_item_id");

                    b.HasIndex("Kid")
                        .HasDatabaseName("IDX_order_item_krid");

                    b.HasIndex("Kit")
                        .HasDatabaseName("IDX_order_item_kit");

                    b.HasIndex("SupplierCode")
                        .HasDatabaseName("IDX_order_item_supplier_code");

                    b.ToTable("order_item");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("Agent")
                        .HasColumnType("int")
                        .HasColumnName("agent");

                    b.Property<int>("Branch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("branch")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CCardName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("cCardName");

                    b.Property<string>("CCardNum")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cCardNum");

                    b.Property<string>("CCardType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cCardType");

                    b.Property<string>("CRefCode")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cRefCode");

                    b.Property<string>("CResponseTxt")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cResponseTxt");

                    b.Property<string>("CSuccess")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cSuccess");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("card_id");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact");

                    b.Property<int?>("CreditOrderId")
                        .HasColumnType("int")
                        .HasColumnName("credit_order_id");

                    b.Property<double>("CustomerGst")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("customer_gst")
                        .HasDefaultValueSql("((0.15))");

                    b.Property<DateTime?>("DateShipped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_shipped")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DealerCustomerName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dealer_customer_name");

                    b.Property<bool>("DealerDraft")
                        .HasColumnType("bit")
                        .HasColumnName("dealer_draft");

                    b.Property<decimal>("DealerTotal")
                        .HasColumnType("money")
                        .HasColumnName("dealer_total");

                    b.Property<string>("DebugInfo")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("debug_info");

                    b.Property<string>("DeliveryNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("delivery_number");

                    b.Property<double?>("Discount")
                        .HasColumnType("float")
                        .HasColumnName("discount");

                    b.Property<decimal>("Freight")
                        .HasColumnType("money")
                        .HasColumnName("freight");

                    b.Property<bool>("GstInclusive")
                        .HasColumnType("bit")
                        .HasColumnName("gst_inclusive");

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int")
                        .HasColumnName("invoice_number");

                    b.Property<bool>("IsWebOrder")
                        .HasColumnType("bit")
                        .HasColumnName("is_web_order");

                    b.Property<int?>("LockedBy")
                        .HasColumnType("int")
                        .HasColumnName("locked_by");

                    b.Property<bool>("NoIndividualPrice")
                        .HasColumnType("bit")
                        .HasColumnName("no_individual_price");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<bool>("OnlineProcessed")
                        .HasColumnType("bit")
                        .HasColumnName("online_processed");

                    b.Property<byte>("OrderDeleted")
                        .HasColumnType("tinyint")
                        .HasColumnName("order_deleted");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("money")
                        .HasColumnName("order_total");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit")
                        .HasColumnName("paid");

                    b.Property<int>("Part")
                        .HasColumnType("int")
                        .HasColumnName("part");

                    b.Property<byte>("PaymentType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("payment_type")
                        .HasDefaultValueSql("((3))");

                    b.Property<string>("PickUpTime")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pick_up_time");

                    b.Property<string>("PoNumber")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("po_number");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int")
                        .HasColumnName("purchase_id");

                    b.Property<decimal>("QuoteTotal")
                        .HasColumnType("money")
                        .HasColumnName("quote_total");

                    b.Property<DateTime>("RecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("record_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Sales")
                        .HasColumnType("int")
                        .HasColumnName("sales");

                    b.Property<int?>("SalesManager")
                        .HasColumnType("int")
                        .HasColumnName("sales_manager");

                    b.Property<string>("SalesNote")
                        .HasColumnType("ntext")
                        .HasColumnName("sales_note");

                    b.Property<bool>("ShipAsParts")
                        .HasColumnType("bit")
                        .HasColumnName("ship_as_parts");

                    b.Property<int?>("Shipby")
                        .HasColumnType("int")
                        .HasColumnName("shipby");

                    b.Property<byte>("ShippingMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("shipping_method")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Shipto")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("shipto");

                    b.Property<bool>("SpecialShipto")
                        .HasColumnType("bit")
                        .HasColumnName("special_shipto");

                    b.Property<int?>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("station_id");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<byte>("StatusOrderonly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status_orderonly")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("System")
                        .HasColumnType("bit")
                        .HasColumnName("system");

                    b.Property<string>("Ticket")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ticket");

                    b.Property<DateTime?>("TimeLocked")
                        .HasColumnType("datetime")
                        .HasColumnName("time_locked");

                    b.Property<decimal>("TotalCharge")
                        .HasColumnType("money")
                        .HasColumnName("total_charge");

                    b.Property<decimal>("TotalDiscount")
                        .HasColumnType("money")
                        .HasColumnName("total_discount");

                    b.Property<decimal>("TotalSpecial")
                        .HasColumnType("money")
                        .HasColumnName("total_special");

                    b.Property<string>("TransFailedReason")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("trans_failed_reason");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasDefaultValueSql("((2))");

                    b.Property<bool?>("Unchecked")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("unchecked")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("WebOrderStatus")
                        .HasColumnType("int")
                        .HasColumnName("web_order_status");

                    b.HasKey("Id");

                    b.HasIndex("CardId")
                        .HasDatabaseName("IDX_orders_card_id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("IDX_orders_id");

                    b.HasIndex("InvoiceNumber")
                        .HasDatabaseName("IDX_orders_invoice_number");

                    b.HasIndex("Sales")
                        .HasDatabaseName("IDX_orders_sales");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.ProductDetails", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("code")
                        .UseIdentityColumn();

                    b.Property<string>("Advice")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("advice");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<string>("Directions")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("directions");

                    b.Property<string>("Highlight")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("highlight");

                    b.Property<string>("Ingredients")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ingredients");

                    b.Property<string>("Manufacture")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("manufacture");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pic");

                    b.Property<string>("Rev")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rev");

                    b.Property<string>("Shipping")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shipping");

                    b.Property<string>("Spec")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("spec");

                    b.Property<string>("Warranty")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("warranty");

                    b.HasKey("Code");

                    b.ToTable("product_details");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Cat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal>("CommitPrice")
                        .HasColumnType("money")
                        .HasColumnName("commit_price");

                    b.Property<int?>("CostofsalesAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("costofsales_account")
                        .HasDefaultValueSql("((5111))");

                    b.Property<double>("DiscountPercent")
                        .HasColumnType("float")
                        .HasColumnName("discount_percent");

                    b.Property<int?>("IncomeAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("income_account")
                        .HasDefaultValueSql("((4111))");

                    b.Property<int?>("InventoryAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("inventory_account")
                        .HasDefaultValueSql("((1121))");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int")
                        .HasColumnName("invoice_number");

                    b.Property<bool>("Kit")
                        .HasColumnType("bit")
                        .HasColumnName("kit");

                    b.Property<int?>("Krid")
                        .HasColumnType("int")
                        .HasColumnName("krid");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .HasComment("Chinese_PRC_BIN");

                    b.Property<decimal>("NormalPrice")
                        .HasColumnType("money")
                        .HasColumnName("normal_price");

                    b.Property<string>("Note")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("note");

                    b.Property<int?>("Owner")
                        .HasColumnType("int")
                        .HasColumnName("owner");

                    b.Property<byte?>("PStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("p_status");

                    b.Property<int?>("Part")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("part")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int?>("ProcessedBy")
                        .HasColumnType("int")
                        .HasColumnName("processed_by");

                    b.Property<double>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<string>("SCat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SalesTotal")
                        .HasColumnType("money")
                        .HasColumnName("sales_total");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("serial_number");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime")
                        .HasColumnName("ship_date");

                    b.Property<byte?>("Shipby")
                        .HasColumnType("tinyint")
                        .HasColumnName("shipby");

                    b.Property<string>("SsCat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.Property<int?>("StockAtSales")
                        .HasColumnType("int")
                        .HasColumnName("stock_at_sales");

                    b.Property<string>("Supplier")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier_code");

                    b.Property<decimal>("SupplierPrice")
                        .HasColumnType("money")
                        .HasColumnName("supplier_price");

                    b.Property<bool>("SysSpecial")
                        .HasColumnType("bit")
                        .HasColumnName("sys_special");

                    b.Property<bool>("System")
                        .HasColumnType("bit")
                        .HasColumnName("system");

                    b.Property<string>("Ticket")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ticket");

                    b.Property<bool>("Used")
                        .HasColumnType("bit")
                        .HasColumnName("used");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IDX_sales_code");

                    b.HasIndex(new[] { "InvoiceNumber" }, "IDX_sales_invoice_number");

                    b.HasIndex(new[] { "Kit" }, "IDX_sales_kit");

                    b.HasIndex(new[] { "Krid" }, "IDX_sales_krid");

                    b.HasIndex(new[] { "Part" }, "IDX_sales_part");

                    b.HasIndex(new[] { "Status" }, "IDX_sales_status");

                    b.HasIndex(new[] { "System" }, "IDX_sales_system");

                    b.ToTable("sales");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int?>("Access")
                        .HasColumnType("int")
                        .HasColumnName("access");

                    b.Property<bool?>("BoolValue")
                        .HasColumnType("bit")
                        .HasColumnName("bool_value");

                    b.Property<string>("Cat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cat");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("Hidden")
                        .HasColumnType("bit")
                        .HasColumnName("hidden");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("settings");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.ShippingInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<int>("orderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<string>("receiver")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiver");

                    b.Property<string>("receiver_address1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiver_address1");

                    b.Property<string>("receiver_address2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiver_address2");

                    b.Property<string>("receiver_address3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiver_address3");

                    b.Property<string>("receiver_city")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiver_city");

                    b.Property<string>("receiver_company")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiver_company");

                    b.Property<string>("receiver_contact")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiver_contact");

                    b.Property<string>("receiver_country")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiver_country");

                    b.Property<string>("receiver_phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiver_phone");

                    b.Property<string>("sender")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sender");

                    b.Property<string>("sender_address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sender_address");

                    b.Property<string>("sender_city")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sender_city");

                    b.Property<string>("sender_country")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sender_country");

                    b.Property<string>("sender_phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sender_phone");

                    b.Property<string>("zip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("zip");

                    b.HasKey("id");

                    b.HasIndex("orderId");

                    b.ToTable("shipping_info");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.SitePages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Cat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cat");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IDX_settings_id");

                    b.ToTable("site_pages");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.StockQty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<double?>("AllocatedStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("allocated_stock")
                        .HasDefaultValueSql("(0)");

                    b.Property<decimal>("AverageCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("average_cost")
                        .HasDefaultValueSql("(0)");

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("branch_id")
                        .HasDefaultValueSql("(1)");

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<double>("LastStock")
                        .HasColumnType("float")
                        .HasColumnName("last_stock");

                    b.Property<decimal>("QposPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("qpos_price")
                        .HasDefaultValueSql("(0)");

                    b.Property<double?>("Qty")
                        .HasColumnType("float")
                        .HasColumnName("qty");

                    b.Property<DateTime>("SpEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sp_end_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("SpStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sp_start_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("SpecialPrice")
                        .HasColumnType("money")
                        .HasColumnName("special_price");

                    b.Property<decimal>("SupplierPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("supplier_price")
                        .HasDefaultValueSql("(0)");

                    b.Property<double?>("WarningStock")
                        .HasColumnType("float")
                        .HasColumnName("warning_stock");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasDatabaseName("IDX_stock_qty_branch_id");

                    b.HasIndex("Code")
                        .HasDatabaseName("IDX_stock_qty_code");

                    b.ToTable("stock_qty");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.StoreSpecial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money")
                        .HasColumnName("cost");

                    b.Property<DateTime>("CostEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("cost_end_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("CostStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("cost_start_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<DateTime>("PriceEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("price_end_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("PriceStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("price_start_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("store_special");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.Tran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasColumnName("amount");

                    b.Property<bool>("Banked")
                        .HasColumnType("bit")
                        .HasColumnName("banked");

                    b.Property<byte>("Branch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("branch")
                        .HasDefaultValueSql("(1)");

                    b.Property<int?>("Dest")
                        .HasColumnType("int")
                        .HasColumnName("dest");

                    b.Property<decimal?>("DestAmount")
                        .HasColumnType("money")
                        .HasColumnName("dest_amount");

                    b.Property<bool>("Reconcile")
                        .HasColumnType("bit")
                        .HasColumnName("reconcile");

                    b.Property<int?>("Source")
                        .HasColumnType("int")
                        .HasColumnName("source");

                    b.Property<int?>("TransBankId")
                        .HasColumnType("int")
                        .HasColumnName("trans_bank_id");

                    b.Property<int?>("TransDate")
                        .HasColumnType("int")
                        .HasColumnName("trans_date");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Banked" }, "IDX_trans_banked");

                    b.HasIndex(new[] { "Branch" }, "IDX_trans_branch");

                    b.ToTable("trans");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.TranDetail", b =>
                {
                    b.Property<int>("Kid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("kid")
                        .UseIdentityColumn();

                    b.Property<string>("Bank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bank");

                    b.Property<string>("Branch")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("branch");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("card_id");

                    b.Property<decimal>("Credit")
                        .HasColumnType("money")
                        .HasColumnName("credit");

                    b.Property<int?>("CreditId")
                        .HasColumnType("int")
                        .HasColumnName("credit_id");

                    b.Property<decimal>("CurrencyLoss")
                        .HasColumnType("money")
                        .HasColumnName("currency_loss");

                    b.Property<decimal?>("DestBalance")
                        .HasColumnType("money")
                        .HasColumnName("dest_balance");

                    b.Property<decimal>("Finance")
                        .HasColumnType("money")
                        .HasColumnName("finance");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(4096)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4096)")
                        .HasColumnName("invoice_number");

                    b.Property<string>("Note")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("note");

                    b.Property<string>("PaidBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("paid_by");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("int")
                        .HasColumnName("payment_method");

                    b.Property<string>("PaymentRef")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_ref");

                    b.Property<decimal?>("SourceBalance")
                        .HasColumnType("money")
                        .HasColumnName("source_balance");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("staff_id");

                    b.Property<DateTime?>("TransDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("trans_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Kid");

                    b.HasIndex(new[] { "CardId" }, "IDX_tran_detail_card_id");

                    b.HasIndex(new[] { "Id" }, "IDX_tran_detail_id");

                    b.HasIndex(new[] { "StaffId" }, "IX_tran_detail_staff_id");

                    b.ToTable("tran_detail");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.TranInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<decimal>("AmountApplied")
                        .HasColumnType("money")
                        .HasColumnName("amount_applied");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int")
                        .HasColumnName("invoice_number");

                    b.Property<bool>("Purchase")
                        .HasColumnType("bit")
                        .HasColumnName("purchase");

                    b.Property<int>("TranId")
                        .HasColumnType("int")
                        .HasColumnName("tran_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Purchase" }, "IDX_tran_invoice_purchase");

                    b.HasIndex(new[] { "TranId" }, "IDX_tran_invoice_tranid");

                    b.ToTable("tran_invoice");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.InvoiceFreight", b =>
                {
                    b.HasOne("gpos_sendPdfInv.Entities.Orders", null)
                        .WithMany("invoiceFreight")
                        .HasForeignKey("OrdersId");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.ShippingInfo", b =>
                {
                    b.HasOne("gpos_sendPdfInv.Entities.Orders", "order")
                        .WithMany("shippinginfo")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");
                });

            modelBuilder.Entity("gpos_sendPdfInv.Entities.Orders", b =>
                {
                    b.Navigation("invoiceFreight");

                    b.Navigation("shippinginfo");
                });
#pragma warning restore 612, 618
        }
    }
}
